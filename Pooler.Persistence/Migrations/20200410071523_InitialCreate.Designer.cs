// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pooler.Persistence;

namespace Pooler.Persistence.Migrations
{
    [DbContext(typeof(PoolerContext))]
    [Migration("20200410071523_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Pooler.Domain.Entities.GameDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("InningCount")
                        .HasColumnType("int");

                    b.Property<int>("P1_BNR")
                        .HasColumnType("int");

                    b.Property<int>("P1_Defensive")
                        .HasColumnType("int");

                    b.Property<int>("P1_WOS")
                        .HasColumnType("int");

                    b.Property<int>("P2_BNR")
                        .HasColumnType("int");

                    b.Property<int>("P2_Defensive")
                        .HasColumnType("int");

                    b.Property<int>("P2_WOS")
                        .HasColumnType("int");

                    b.Property<int>("gameType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GameDetails");
                });

            modelBuilder.Entity("Pooler.Domain.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Pooler.Domain.Entities.PoolGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PlayerOneId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerTwoId")
                        .HasColumnType("int");

                    b.Property<int?>("WinnerId")
                        .HasColumnType("int");

                    b.Property<int?>("gameDetailsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("gameEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("gameStart")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PlayerOneId");

                    b.HasIndex("PlayerTwoId");

                    b.HasIndex("WinnerId");

                    b.HasIndex("gameDetailsId");

                    b.ToTable("PoolGames");
                });

            modelBuilder.Entity("Pooler.Domain.Entities.PoolGame", b =>
                {
                    b.HasOne("Pooler.Domain.Entities.Player", "PlayerOne")
                        .WithMany()
                        .HasForeignKey("PlayerOneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pooler.Domain.Entities.Player", "PlayerTwo")
                        .WithMany()
                        .HasForeignKey("PlayerTwoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pooler.Domain.Entities.Player", "Winner")
                        .WithMany()
                        .HasForeignKey("WinnerId");

                    b.HasOne("Pooler.Domain.Entities.GameDetails", "gameDetails")
                        .WithMany()
                        .HasForeignKey("gameDetailsId");
                });
#pragma warning restore 612, 618
        }
    }
}
